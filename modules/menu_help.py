# modules/menu_help.py
# –û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –º–µ–Ω—é pyChainLite

import os
from rich.console import Console
from rich.table import Table

console = Console()

HELP_DIR = "doc/menu_help"

def display_help_menu():
    table = Table(title="‚ÑπÔ∏è  –û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞", show_header=True, header_style="bold yellow")
    table.add_column("##", style="dim")
    table.add_column("–û–ø–∏—Å–∞–Ω–∏–µ", style="bold")

    # –û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º
    table.add_row("1", "üß± –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –±–ª–æ–∫—á–µ–π–Ω")
    table.add_row("2", "üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç—å –±–ª–æ–∫—á–µ–π–Ω")
    table.add_row("3", "üìú –°–ø–∏—Å–æ–∫ –±–ª–æ–∫—á–µ–π–Ω–æ–≤")
    table.add_row("4", "üìù –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –±–ª–æ–∫")
    table.add_row("5", "üîç –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª–æ–∫–∏")
    table.add_row("6", "üß™ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã")
    table.add_row("7", "üîÑ –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç")
    table.add_row("Q", "üö™ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é")

    console.print(table)

    choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏ (1-7 –∏–ª–∏ Q): ").strip().upper()

    if choice == 'Q':
        return
    else:
        display_help_content(choice)

def display_help_content(choice):
    help_files = {
        '1': "1_create_blockchain.md",
        '2': "2_load_blockchain.md",
        '3': "3_list_blockchains.md",
        '4': "4_create_new_block.md",
        '5': "5_view_blocks.md",
        '6': "6_run_tests.md",
        '7': "7_update_project.md",
        'Q': None,
    }

    help_file = help_files.get(choice)
    if help_file:
        file_path = os.path.join(HELP_DIR, help_file)
        if os.path.exists(file_path):
            with open(file_path, 'r') as f:
                content = f.read()
            console.print(content)
        else:
            console.print(f"[red]–§–∞–π–ª —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º '{help_file}' –Ω–µ –Ω–∞–π–¥–µ–Ω.[/red]")
    else:
        console.print("[red]–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.[/red]")

    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –ø–æ–º–æ—â–∏...")
