import os
import hashlib
import json
import subprocess
from rich.console import Console
from rich.table import Table
from src.blockchain import Block

console = Console()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–ª–æ–∫—á–µ–π–Ω
blockchain = []

# –ü—É—Ç—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –±–ª–æ–∫—á–µ–π–Ω–æ–≤
BLOCKCHAIN_DIR = "blockchains"

def ensure_blockchain_dir():
    """–°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –±–ª–æ–∫—á–µ–π–Ω–æ–≤, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç"""
    if not os.path.exists(BLOCKCHAIN_DIR):
        os.makedirs(BLOCKCHAIN_DIR)

def save_blockchain_to_file(blockchain_name, blockchain):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –±–ª–æ–∫—á–µ–π–Ω –≤ —Ñ–∞–π–ª"""
    filename = f"{BLOCKCHAIN_DIR}/{blockchain_name}.json"
    with open(filename, "w") as f:
        json.dump({"blocks": [block.__dict__ for block in blockchain]}, f, indent=4)

def create_genesis_block(blockchain_name):
    """–°–æ–∑–¥–∞–Ω–∏–µ –≥–µ–Ω–µ–∑–∏—Å-–±–ª–æ–∫–∞ —Å —Ö–µ—à–µ–º –∏–º–µ–Ω–∏ –±–ª–æ–∫—á–µ–π–Ω–∞"""
    blockchain_name_hash = hashlib.sha256(blockchain_name.encode()).hexdigest()
    genesis_block = Block(0, blockchain_name, "0" * 64)
    blockchain.append(genesis_block)
    return blockchain_name_hash

def display_menu():
    table = Table(title="–ú–µ–Ω—é pyChainLite", show_header=True, header_style="bold cyan")
    table.add_column("–ù–æ–º–µ—Ä", style="dim")
    table.add_column("–î–µ–π—Å—Ç–≤–∏–µ", style="bold")
    
    table.add_row("1", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–ª–æ–∫—á–µ–π–Ω")
    table.add_row("2", "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –±–ª–æ–∫")
    table.add_row("3", "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª–æ–∫–∏")
    table.add_row("4", "–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã")
    table.add_row("5", "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å/–°–æ–∑–¥–∞—Ç—å –∞–ª–∏–∞—Å upstart")
    table.add_row("6", "–û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç")
    table.add_row("7", "–í—ã–π—Ç–∏")

    console.print(table)

def run_blockchain():
    console.print("üöÄ [bold green]–ó–∞–ø—É—Å–∫ –±–ª–æ–∫—á–µ–π–Ω–∞...[/bold green]")
    blockchain_name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –±–ª–æ–∫—á–µ–π–Ω–∞: ")
    ensure_blockchain_dir()
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ö–µ—à–∞ –∏–º–µ–Ω–∏ –±–ª–æ–∫—á–µ–π–Ω–∞
    blockchain_name_hash = create_genesis_block(blockchain_name)
    
    console.print(f"–°–æ–∑–¥–∞–Ω –≥–µ–Ω–µ–∑–∏—Å –±–ª–æ–∫ –¥–ª—è –±–ª–æ–∫—á–µ–π–Ω–∞ '{blockchain_name}' —Å —Ö–µ—à–µ–º: {blockchain_name_hash}")
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –±–ª–æ–∫—á–µ–π–Ω–∞ –≤ —Ñ–∞–π–ª
    save_blockchain_to_file(blockchain_name_hash, blockchain)
    console.print(f"–ë–ª–æ–∫—á–µ–π–Ω '{blockchain_name}' —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ —Ñ–∞–π–ª {blockchain_name_hash}.json")

def add_new_block():
    if not blockchain:
        console.print("[bold red]–ë–ª–æ–∫—á–µ–π–Ω –µ—â—ë –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–ª–æ–∫—á–µ–π–Ω —Å–Ω–∞—á–∞–ª–∞.[/bold red]")
        return

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –±–ª–æ–∫–∞
    data = input("–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –±–ª–æ–∫–∞: ")
    last_block = blockchain[-1]
    new_block = Block(last_block.index + 1, data, last_block.hash)
    blockchain.append(new_block)
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –±–ª–æ–∫—á–µ–π–Ω–∞
    save_blockchain_to_file(last_block.data, blockchain)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –±–ª–æ–∫—á–µ–π–Ω–∞ (–≤ –≥–µ–Ω–µ–∑–∏—Å-–±–ª–æ–∫–µ)
    console.print(f"–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –±–ª–æ–∫: {new_block}")

def view_blocks():
    if not blockchain:
        console.print("[bold red]–ë–ª–æ–∫—á–µ–π–Ω –µ—â—ë –Ω–µ –∑–∞–ø—É—â–µ–Ω.[/bold red]")
        return

    console.print("[bold blue]–¢–µ–∫—É—â–∏–µ –±–ª–æ–∫–∏ –≤ –±–ª–æ–∫—á–µ–π–Ω–µ:[/bold blue]")
    for block in blockchain:
        console.print(block)

def run_tests():
    console.print("üß™ [bold magenta]–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...[/bold magenta]")
    env = os.environ.copy()
    env['PYTHONPATH'] = os.path.join(os.getcwd(), "src")
    try:
        subprocess.run(['pytest'], check=True, env=env)
    except subprocess.CalledProcessError as e:
        console.print(f"[bold red]–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤: {e}[/bold red]")

def main():
    while True:
        display_menu()
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-7): ")
        
        if choice == '1':
            run_blockchain()
        elif choice == '2':
            add_new_block()
        elif choice == '3':
            view_blocks()
        elif choice == '4':
            run_tests()
        elif choice == '5':
            console.print("[bold green]–í—ã—Ö–æ–¥...[/bold green]")
            break
        else:
            console.print("[bold red]–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç 1 –¥–æ 7.[/bold red]")

if __name__ == "__main__":
    main()
