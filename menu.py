# menu.py
# –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–ª–æ–∫—á–µ–π–Ω–æ–º pyChainLite

import os
import json
import hashlib
from rich.console import Console
from modules.blockchain_loading import load_blockchain
from modules.block_creation import create_new_block
from modules.blockchain_listing import list_blockchains
from modules.blockchain_creation import create_blockchain

console = Console()

BLOCKCHAIN_DIR = "blockchains"
current_blockchain = None


def main():
    global current_blockchain

    while True:
        console.print("\n[bold]–¢–µ–∫—É—â–∏–π –±–ª–æ–∫—á–µ–π–Ω:[/bold] [cyan]{}[/cyan]".format(current_blockchain["name"] if current_blockchain else "–ë–ª–æ–∫—á–µ–π–Ω –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω"))
        console.print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-7, H –∏–ª–∏ Q):")
        console.print("1. üß± –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –±–ª–æ–∫—á–µ–π–Ω")
        console.print("2. üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç—å –±–ª–æ–∫—á–µ–π–Ω")
        console.print("3. üìú –°–ø–∏—Å–æ–∫ –±–ª–æ–∫—á–µ–π–Ω–æ–≤")
        console.print("4. üìù –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –±–ª–æ–∫")
        console.print("5. üîç –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª–æ–∫–∏")
        console.print("6. üß™ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã")
        console.print("7. üîÑ –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç")
        console.print("H. ‚ùì –û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞")
        console.print("Q. üö™ –í—ã–π—Ç–∏")

        choice = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤—ã–±–æ—Ä: ").lower()

        if choice == "1":
            blockchain_name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –Ω–æ–≤–æ–≥–æ –±–ª–æ–∫—á–µ–π–Ω–∞: ")
            owner_name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≤–ª–∞–¥–µ–ª—å—Ü–∞: ")
            current_blockchain = create_blockchain(blockchain_name, owner_name)
        elif choice == "2":
            blockchain_name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –±–ª–æ–∫—á–µ–π–Ω–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏: ")
            current_blockchain = load_blockchain(blockchain_name)
        elif choice == "3":
            list_blockchains()
        elif choice == "4":
            if current_blockchain:
                data = input("–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –±–ª–æ–∫–∞: ")
                create_new_block(current_blockchain, data)
            else:
                console.print("[bold red]–û—à–∏–±–∫–∞:[/bold red] –ë–ª–æ–∫—á–µ–π–Ω –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –±–ª–æ–∫—á–µ–π–Ω.")
        elif choice == "5":
            if current_blockchain:
                for block in current_blockchain["blocks"]:
                    console.print(f"–ë–ª–æ–∫ {block['index']}: {block}")
            else:
                console.print("[bold red]–û—à–∏–±–∫–∞:[/bold red] –ë–ª–æ–∫—á–µ–π–Ω –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω.")
        elif choice == "6":
            run_tests()
        elif choice == "7":
            update_project()
        elif choice == "h":
            show_help()
        elif choice == "q":
            console.print("–í—ã—Ö–æ–¥...")
            break
        else:
            console.print("[bold red]–û—à–∏–±–∫–∞:[/bold red] –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞.")


def run_tests():
    import subprocess
    try:
        console.print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...")
        subprocess.run(["pytest"], check=True)
        console.print("üß™ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ! OK üëç")
    except subprocess.CalledProcessError:
        console.print("[bold red]–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤.[/bold red]")


def update_project():
    import subprocess
    try:
        console.print("üîÑ [bold cyan]–ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞...[/bold cyan]")
        subprocess.run(["git", "pull"], check=True)
        console.print("–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.")
    except subprocess.CalledProcessError as e:
        console.print(f"[bold red]–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞: {e}[/bold red]")


def show_help():
    console.print("–û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã:")
    console.print("1. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –±–ª–æ–∫—á–µ–π–Ω–∞")
    console.print("2. –ó–∞–≥—Ä—É–∑–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –±–ª–æ–∫—á–µ–π–Ω–∞")
    console.print("3. –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –±–ª–æ–∫—á–µ–π–Ω–æ–≤")
    console.print("4. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –±–ª–æ–∫–∞ –≤ –±–ª–æ–∫—á–µ–π–Ω")
    console.print("5. –ü—Ä–æ—Å–º–æ—Ç—Ä –±–ª–æ–∫–æ–≤ –≤ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–º –±–ª–æ–∫—á–µ–π–Ω–µ")
    console.print("6. –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
    console.print("7. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å GitHub")


if __name__ == "__main__":
    main()
