# menu.py
# –ú–µ–Ω—é pyChainLite

import os
import subprocess
import threading
from rich.console import Console
from rich.table import Table
from modules.blockchain_loading import load_blockchain
from modules.blockchain_listing import list_blockchains
from modules.blockchain_creation import create_blockchain
from modules.block_creation import create_new_block, view_blocks
from modules.update_project import update_project
from modules.run_tests import run_tests
import time

console = Console()
current_blockchain = None  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –±–ª–æ–∫—á–µ–π–Ω–∞
test_result_message = "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ç–µ—Å—Ç–æ–≤

# –§–æ–Ω–æ–≤–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤
def background_test_runner():
    global test_result_message
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã, –ø–æ–¥–∞–≤–ª—è—è –∏—Ö –≤—ã–≤–æ–¥
        result = subprocess.run(['pytest'], stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)
        if result.returncode == 0:
            # –ï—Å–ª–∏ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ
            test_result_message = "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤... [green]OK üëç[/green]"
        else:
            # –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏, –≤—ã–≤–æ–¥–∏–º –∏—Ö –ø–µ—Ä–µ–¥ –º–µ–Ω—é
            test_result_message = "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤... [bold red]–û—à–∏–±–∫–∞ ‚ùå[/bold red]"
            console.print(f"[bold red]–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:[/bold red]\n{result.stdout}")
            console.print("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
            input()
    except Exception as e:
        # –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        console.print(f"[bold red]–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤: {e}[/bold red]")

def display_menu():
    menu_width = 50  # –®–∏—Ä–∏–Ω–∞ –º–µ–Ω—é –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è

    # –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
    table = Table(title="–ú–µ–Ω—é pyChainLite", show_header=True, header_style="bold cyan")
    table.add_column("##", style="dim")
    table.add_column("üöÄ –î–µ–π—Å—Ç–≤–∏–µ", style="bold")

    table.add_row("1", "üß± –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –±–ª–æ–∫—á–µ–π–Ω")
    table.add_row("2", "üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç—å –±–ª–æ–∫—á–µ–π–Ω")
    table.add_row("5", "üìú –°–ø–∏—Å–æ–∫ –±–ª–æ–∫—á–µ–π–Ω–æ–≤")
    table.add_row("", "")  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Å–µ–∫—Ü–∏–π
    table.add_row("3", "üìù –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –±–ª–æ–∫")
    table.add_row("4", "üîç –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª–æ–∫–∏")
    table.add_row("", "")  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Å–µ–∫—Ü–∏–π
    table.add_row("6", "üß™ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã")
    table.add_row("", "")  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Å–µ–∫—Ü–∏–π
    table.add_row("7", "üîÑ –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç")
    table.add_row("H", "‚ùì  –û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞")
    table.add_row("Q", "üö™ –í—ã–π—Ç–∏")

    # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–ª–æ–∫—á–µ–π–Ω–µ –ø–æ—Å–ª–µ –º–µ–Ω—é
    console.print(table)

    # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∞—Ç—É—Å–µ —Ç–µ—Å—Ç–æ–≤
    test_status = test_result_message.center(menu_width)
    console.print(test_status)

    # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–ª–æ–∫—á–µ–π–Ω–µ
    if current_blockchain:
        blockchain_info = f"–¢–µ–∫—É—â–∏–π –±–ª–æ–∫—á–µ–π–Ω: {current_blockchain['blocks'][0]['data']['blockchain_name']}"
    else:
        blockchain_info = "–ë–ª–æ–∫—á–µ–π–Ω –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω"

    blockchain_status = blockchain_info.center(menu_width)
    console.print(blockchain_status)


def main():
    global current_blockchain

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –≤ —Ñ–æ–Ω–µ
    test_thread = threading.Thread(target=background_test_runner)
    test_thread.start()

    # –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤ –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é
    test_thread.join()

    while True:
        display_menu()
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-7, H –∏–ª–∏ Q): ").strip().upper()
        
        if choice == '1':
            create_blockchain()
        elif choice == '2':
            current_blockchain = load_blockchain()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –±–ª–æ–∫—á–µ–π–Ω
        elif choice == '4':
            if current_blockchain:
                create_new_block(current_blockchain)
            else:
                console.print("[bold red]–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –±–ª–æ–∫—á–µ–π–Ω.[/bold red]")
        elif choice == '5':
            if current_blockchain:
                view_blocks(current_blockchain)
            else:
                console.print("[bold red]–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –±–ª–æ–∫—á–µ–π–Ω.[/bold red]")
        elif choice == '3':
            list_blockchains()
        elif choice == '6':
            run_tests()
        elif choice == '7':
            update_project()
        elif choice == 'H':
            display_help_menu()  # –í—ã–∑–æ–≤ –º–µ–Ω—é –ø–æ–º–æ—â–∏
        elif choice == 'Q':
            console.print("[bold green]–í—ã—Ö–æ–¥...[/bold green]")
            break
        else:
            console.print("[bold red]–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç 1 –¥–æ 7, H –∏–ª–∏ Q.[/bold red]")

if __name__ == "__main__":
    main()
